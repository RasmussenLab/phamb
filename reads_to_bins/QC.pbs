#!/bin/bash

# This is QC.pbs
# Joachim 2019/09

# Example usage:

### exit if any errors or unset variables are encountered
#set -euo pipefail

if [ "$#" -lt 6 ]; then
    echo "QC: Expected at least 4 arguments; received $#: $@"
    exit 1
fi


### LOAD MODULES NEEDED 
module load tools 
module load jre/1.8.0-openjdk 
module load anaconda2/4.4.0       # provides kneaddata
module load trimmomatic/0.36
module load perl/5.24.0 java/1.8.0-openjdk fastqc/0.11.5
module load bowtie2/2.3.2
module load pigz/2.3.4

### echo commands to the error stream (may help debugging)
set -x 


### GLOBAL VARIABLES
readonly INPUT_TABLE="$1"
readonly QC_HOST_DATABASE="$2"   # For removal of host contamination if any. 
readonly QC_THREADS="$3"
readonly QC_CLEAN="$4"
readonly QC_METHOD="$5"
readonly QC_PREQC="$6"
shift
shift
shift
shift
shift
shift
readonly QC_TRIMMOMATIC_ARGS="$*"
readonly MAXMEM=$((120*$QC_THREADS/28))
readonly QCDIR=01_qced
readonly LOGDIR=log
readonly JOBID_SIMPLE=`echo ${PBS_JOBID} | sed -r 's/(\[|\.).*$//'`   ## extract the numeric part only
readonly TEMPDIR=tmp

mkdir -p "${QCDIR}" "${LOGDIR}" "${LOGDIR}/kneaddata" "${TEMPDIR}"

## read from a single line corresponding to the job array ID
read SAMPLE FQ1 FQ2 PLACEHOLDER < <(cat $INPUT_TABLE | sed "${PBS_ARRAYID}q;d")
readonly SAMPLE FQ1 FQ2

### If fastq file is missing abort.
if [ ! -f "${FQ1}" ]; then 
    echo "Fwd read file ${FQ1} not found!" ; exit 1;
fi 

if [ -z "${FQ2}" ]; then
    readonly PAIRED=
    KNEADDATA_INPUT="--input ${FQ1}"
else
    readonly PAIRED=1
    [ -f "${FQ2}" ] || { echo "Rev read file ${FQ2} not found!" ; exit 1; } 
    KNEADDATA_INPUT="--input ${FQ1} --input ${FQ2}"
fi


## If the files are QCed already by someone else - ** assuming gzipped files ** 
if [ "${QC_PREQC}" == "true" ];then
    echo `date` "Files Are PRE-QCed -> we just rename them and move them ${QCDIR}" 
    if [ ${PAIRED} ]; then
        cp ${FQ1} $QCDIR/${SAMPLE}_trimmed_paired_1.fastq.gz
        cp ${FQ2} $QCDIR/${SAMPLE}_trimmed_paired_2.fastq.gz
    else
        cp ${FQ1} $QCDIR/${SAMPLE}_trimmed.fastq.gz
    fi
    exit 0
fi



echo `date` Starting QC
echo "SAMPLE=${SAMPLE}"
echo "FQ1=${FQ1}"
echo "FQ2=${FQ2}"
echo "HOST_DATABASE=${QC_HOST_DATABASE}"
echo "THREADS=${QC_THREADS}"
echo "MAP_CLEAN=${QC_CLEAN}"
echo "TRIMMOMATIC_ARGS=${QC_TRIMMOMATIC_ARGS}"


## We can skip kneaddata if the output file already exists
if [ ${QC_METHOD} == 'kneaddata' ]; then 

if [ -f "$QCDIR/${SAMPLE}_trimmed_paired_1.fastq.gz" ]; then
    echo `date` Skipping Trimming:QC
    exit 0
else 
    echo `date` Starting Trimming:QC

    kneaddata  ${KNEADDATA_INPUT} \
        -db ${QC_HOST_DATABASE} \
        --output ${TEMPDIR} \
        --output-prefix ${SAMPLE}_kneaddata \
        -q phred33  --threads ${QC_THREADS}  --processes ${QC_THREADS} \
        --trimmomatic /services/tools/trimmomatic/0.36 \
        --trimmomatic-options="$QC_TRIMMOMATIC_ARGS" \
        --bowtie2 /services/tools/bowtie2/2.3.2 \
        --bowtie2-options="-p ${QC_THREADS}" \
        --fastqc /services/tools/ngs/FastQC-0.11.5 \
        1> ${LOGDIR}/kneaddata/${SAMPLE}.out \
        2> ${LOGDIR}/kneaddata/${SAMPLE}.err

    echo `date` Compressing and moving finished fastq files

    if [ ${PAIRED} ]; then
        pigz -p $(($QC_THREADS/2)) ${TEMPDIR}/${SAMPLE}_kneaddata_paired_1.fastq &
        pigz -p $(($QC_THREADS/2)) ${TEMPDIR}/${SAMPLE}_kneaddata_paired_2.fastq
        wait

        mv ${TEMPDIR}/${SAMPLE}_kneaddata_paired_1.fastq.gz $QCDIR/${SAMPLE}_trimmed_paired_1.fastq.gz
        mv ${TEMPDIR}/${SAMPLE}_kneaddata_paired_2.fastq.gz $QCDIR/${SAMPLE}_trimmed_paired_2.fastq.gz
    else
        pigz -p ${QC_THREADS} ${TEMPDIR}/${SAMPLE}_kneaddata.fastq
        mv ${TEMPDIR}/${SAMPLE}_kneaddata.fastq.gz $QCDIR/${SAMPLE}_trimmed.fastq.gz
    fi

    if [ "${QC_CLEAN}" = true ]; then
        echo `date` Removing temporary files
        rm tmp/${SAMPLE}_kneaddata*
    fi
fi

fi 